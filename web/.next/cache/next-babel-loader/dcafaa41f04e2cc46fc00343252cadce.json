{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/coryschadt/Documents/cory-analog/web/pages/index.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"photo\\\" && publishedAt < now()]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// index.js\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport imageUrlBuilder from '@sanity/image-url';\nimport groq from 'groq';\nimport client from '../client';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Index = function Index(_ref) {\n  var _ref$photos = _ref.photos,\n      photos = _ref$photos === void 0 ? [] : _ref$photos;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: photos.map(function (_ref2) {\n      var _id = _ref2._id,\n          _ref2$title = _ref2.title,\n          title = _ref2$title === void 0 ? '' : _ref2$title,\n          _ref2$slug = _ref2.slug,\n          slug = _ref2$slug === void 0 ? '' : _ref2$slug,\n          _ref2$_updatedAt = _ref2._updatedAt,\n          _updatedAt = _ref2$_updatedAt === void 0 ? '' : _ref2$_updatedAt,\n          mainImage = _ref2.mainImage,\n          camera = _ref2.camera;\n\n      return slug && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: camera\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: urlFor(mainImage).width(200).url()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/photo/[slug]\",\n          as: \"/photo/\".concat(slug.current),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, _this), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\"]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.fetch(groq(_templateObject()));\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            photos: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/coryschadt/Documents/cory-analog/web/pages/index.js"],"names":["useState","Link","imageUrlBuilder","groq","client","urlFor","source","image","Index","photos","map","_id","title","slug","_updatedAt","mainImage","camera","width","url","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOJ,eAAe,CAACE,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,IAAME,KAAK,GAAG,SAARA,KAAQ,OAAqB;AAAA,yBAAlBC,MAAkB;AAAA,MAAlBA,MAAkB,4BAAT,EAAS;AACjC,sBACE;AAAA,cACGA,MAAM,CAACC,GAAP,CACC;AAAA,UAAGC,GAAH,SAAGA,GAAH;AAAA,8BAAQC,KAAR;AAAA,UAAQA,KAAR,4BAAgB,EAAhB;AAAA,6BAAoBC,IAApB;AAAA,UAAoBA,IAApB,2BAA2B,EAA3B;AAAA,mCAA+BC,UAA/B;AAAA,UAA+BA,UAA/B,iCAA4C,EAA5C;AAAA,UAAgDC,SAAhD,SAAgDA,SAAhD;AAAA,UAA2DC,MAA3D,SAA2DA,MAA3D;;AAAA,aACEH,IAAI,iBACF;AAAA,gCACE;AAAA,oBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,UAAA,GAAG,EAAEX,MAAM,CAACU,SAAD,CAAN,CACFE,KADE,CACI,GADJ,EAEFC,GAFE;AADP;AAAA;AAAA;AAAA;AAAA,iBAFF,eAOE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,eAAX;AAA2B,UAAA,EAAE,mBAAYL,IAAI,CAACM,OAAjB,CAA7B;AAAA,iCACE;AAAA,sBAAIP;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAPF,EAUU,GAVV,OAWM,IAAIQ,IAAJ,CAASN,UAAT,EAAqBO,YAArB,EAXN;AAAA,SAASV,GAAT;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA,KADD;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CAvBD;;KAAMH,K;AAyBNA,KAAK,CAACc,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACRlB,MAAM,CAACmB,KAAP,CAAapB,IAAb,oBADQ;;AAAA;AAAA;AAAA;AACtBM,YAAAA,MADsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAMA,eAAeD,KAAf","sourcesContent":["// index.js\nimport { useState } from 'react'\nimport Link from 'next/link'\nimport imageUrlBuilder from '@sanity/image-url'\nimport groq from 'groq'\nimport client from '../client'\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Index = ({ photos = [] }) => {\n  return (\n    <div>\n      {photos.map(\n        ({ _id, title = '', slug = '', _updatedAt = '', mainImage, camera }) =>\n          slug && (\n            <li key={_id}>\n              <h1>{camera}</h1>\n              <img\n                src={urlFor(mainImage)\n                  .width(200)\n                  .url()}\n              />\n              <Link href='/photo/[slug]' as={`/photo/${slug.current}`}>\n                <a>{title}</a>\n\n              </Link>{' '}\n                ({new Date(_updatedAt).toDateString()})\n            </li>\n          )\n      )}\n    </div>\n  )\n}\n\nIndex.getInitialProps = async () => ({\n  photos: await client.fetch(groq`\n      *[_type == \"photo\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n})\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}