{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/coryschadt/Documents/cory-analog/web/pages/post/[slug].js\";\n// [slug].js\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport client from '../../client';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    authorImage\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"By \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), categories && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"Posted in\", categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), authorImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(authorImage).width(50).url()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image\n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/coryschadt/Documents/cory-analog/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","client","urlFor","source","image","Post","props","title","name","categories","authorImage","map","category","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;AAAA;AAEA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOH,eAAe,CAACC,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,KAAK,GAAG,eADJ;AAEJC,IAAAA,IAAI,GAAG,cAFH;AAGJC,IAAAA,UAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAMA,sBACE;AAAA,4BACE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,wBAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGC,UAAU,iBACT;AAAA,8BAEGA,UAAU,CAACE,GAAX,CAAeC,QAAQ,iBAAI;AAAA,kBAAoBA;AAApB,SAASA,QAAT;AAAA;AAAA;AAAA;AAAA,cAA3B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EASGF,WAAW,iBACV;AAAA,6BACE;AACE,QAAA,GAAG,EAAER,MAAM,CAACQ,WAAD,CAAN,CACFG,KADE,CACI,EADJ,EAEFC,GAFE;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA5BD;;AA8BA,MAAMC,KAAK,GAAGhB,IAAK;AACnB;AACA;AACA;AACA;AACA,EALA;;AAOAM,IAAI,CAACW,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMd,MAAM,CAACkB,KAAP,CAAaJ,KAAb,EAAoB;AAC/BG,IAAAA;AAD+B,GAApB,CAAb;AAGD,CAND;;AAQA,eAAeb,IAAf","sourcesContent":["// [slug].js\n\nimport groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport client from '../../client'\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Post = (props) => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    authorImage\n  } = props\n  return (\n    <article>\n      <h1>{title}</h1>\n      <span>By {name}</span>\n      {categories && (\n        <ul>\n          Posted in\n          {categories.map(category => <li key={category}>{category}</li>)}\n        </ul>\n      )}\n      {authorImage && (\n        <div>\n          <img\n            src={urlFor(authorImage)\n              .width(50)\n              .url()}\n          />\n        </div>\n      )}\n    </article>\n  )\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image\n}`\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query\n  return await client.fetch(query, {\n    slug\n  })\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}